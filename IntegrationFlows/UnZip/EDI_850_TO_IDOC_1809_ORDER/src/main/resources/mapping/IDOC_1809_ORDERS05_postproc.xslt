<?xml version="1.0" encoding="UTF-8"?><!--Copyright statement for Type System SAP S/4HANA On Premise IDoc: Copyright © SAP SE 2017. All Rights Reserved. 

See also: https://www.sap.com/corporate/en/legal/copyright/use-of-copyrighted-material.html--><!--Copyright statement for ISO Codelists: Copyright (c) 2017, ISO

All ISO content is copyright protected. The copyright is owned by ISO. Any use of the content, including copying of it in whole or in part, for example to another Internet site, is prohibited and would require written permission from ISO.

All ISO publications are also protected by copyright. The copyright ownership of ISO is clearly indicated on every ISO publication. Any unauthorized use such as copying, scanning or distribution is prohibited.

Requests for permission should be addressed to the ISO Central Secretariat or directly through the ISO member in your country.

See more: https://www.iso.org/privacy-and-copyright.html--><!--Copyright statement for UN/CEFACT Codelists: Copyright (c) United Nations 2000-2008. All rights reserved. None of the materials provided on this web site may be used, reproduced or transmitted, in whole or in part, in any form or by any means, electronic or mechanical, including photocopying, recording or the use of any information storage and retrieval system, except as provided for in the Terms and Conditions of Use of United Nations Web Sites, without permission in writing from the publisher. To request such permission and for further enquiries, contact the Secretary of the Publications Board, United Nations, New York, NY, 10017, USA (pubboard@un.org; Telephone: (+1) 212-963-4664; Facsimile: (+1) 212-963-0077). See also: http://www.unece.org/legal_notice/copyrightnotice.html--><xsl:stylesheet xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="3.0"><xsl:output encoding="UTF-8" method="xml" version="1.0"/><xsl:template match="/node()"><xsl:variable name="vThisNode" select="name()"/><xsl:variable name="vPhaseIDoc"><xsl:element name="{$vThisNode}"><xsl:element name="IDOC"><xsl:attribute name="BEGIN"><xsl:value-of select="'1'"/></xsl:attribute><xsl:apply-templates mode="mPrepare" select="node()"/></xsl:element></xsl:element></xsl:variable><xsl:variable name="vGroupSegTags" select="'/ORDERS05/IDOC/E1EDKA1, /ORDERS05/IDOC/E1EDKT1, /ORDERS05/IDOC/E1EDP01, /ORDERS05/IDOC/E1EDP01/E1EDP05, /ORDERS05/IDOC/E1EDP01/E1EDPA1, /ORDERS05/IDOC/E1EDP01/E1EDPAD, /ORDERS05/IDOC/E1EDP01/E1EDPAD/E1TXTH1, /ORDERS05/IDOC/E1EDP01/E1EDPT1, /ORDERS05/IDOC/E1EDP01/E1EDC01, /ORDERS05/IDOC/E1EDP01/E1EDC01/E1EDCT1, /ORDERS05/IDOC/E1CUCFG, /ORDERS05/IDOC/E1EDL37, '"/><xsl:variable name="vSegmentTags" select="' EDI_DC40, E1EDK01, E1EDK14, E1EDK03, E1EDK04, E1EDK05, E1EDKA1, E1EDKA3, E1EDK02, E1EDK17, E1EDK18, E1EDK35, E1EDK36, E1EDKT1, E1EDKT2, E1EDP01, E1EDP02, E1CUREF, E1ADDI1, E1EDP03, E1EDP04, E1EDP05, E1EDPS5, E1EDP20, E1EDPA1, E1EDPA3, E1EDP19, E1EDPAD, E1TXTH1, E1TXTP1, E1EDP17, E1EDP18, E1EDP35, E1EDPT1, E1EDPT2, E1EDC01, E1EDC02, E1EDC03, E1EDC04, E1EDC05, E1EDC06, E1EDC07, E1EDCA1, E1EDC19, E1EDC17, E1EDC18, E1EDCT1, E1EDCT2, E1CUCFG, E1CUINS, E1CUPRT, E1CUVAL, E1CUBLB, E1EDL37, E1EDL39, E1EDL38, E1EDL44, E1EDS01, E1IDOCENHANCEMENT, '"/><xsl:apply-templates mode="mPostProc" select="$vPhaseIDoc"><xsl:with-param name="pGroupSegTags" select="$vGroupSegTags"/><xsl:with-param name="pSegmentTags" select="$vSegmentTags"/><xsl:with-param name="pPath" select="''"/></xsl:apply-templates></xsl:template><xsl:template match="@*|node()" mode="mPostProc"><xsl:param name="pGroupSegTags"/><xsl:param name="pSegmentTags"/><xsl:param name="pPath"/><xsl:variable name="vTagPath" select="concat($pPath, '/', name())"/><xsl:variable name="vTagName" select="name()"/><xsl:choose><xsl:when test="contains($pGroupSegTags, concat($vTagPath, ','))"><xsl:copy copy-namespaces="no"><xsl:attribute name="SEGMENT"><xsl:value-of select="'1'"/></xsl:attribute><xsl:apply-templates mode="mPostProc" select="node()[name()=$vTagName]/*"><xsl:with-param name="pGroupSegTags" select="$pGroupSegTags"/><xsl:with-param name="pSegmentTags" select="$pSegmentTags"/><xsl:with-param name="pPath" select="concat($pPath, '/', name())"/></xsl:apply-templates><xsl:apply-templates mode="mPostProc" select="node()[not(name()=$vTagName)]"><xsl:with-param name="pGroupSegTags" select="$pGroupSegTags"/><xsl:with-param name="pSegmentTags" select="$pSegmentTags"/><xsl:with-param name="pPath" select="concat($pPath, '/', name())"/></xsl:apply-templates></xsl:copy></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="contains($pSegmentTags, concat(' ', $vTagName, ','))"><xsl:copy copy-namespaces="no"><xsl:attribute name="SEGMENT"><xsl:value-of select="'1'"/></xsl:attribute><xsl:apply-templates mode="mPostProc" select="node()"><xsl:with-param name="pGroupSegTags" select="$pGroupSegTags"/><xsl:with-param name="pSegmentTags" select="$pSegmentTags"/><xsl:with-param name="pPath" select="concat($pPath, '/', name())"/></xsl:apply-templates></xsl:copy></xsl:when><xsl:otherwise><xsl:copy copy-namespaces="no"><xsl:apply-templates mode="mPostProc" select="@*|node()"><xsl:with-param name="pGroupSegTags" select="$pGroupSegTags"/><xsl:with-param name="pSegmentTags" select="$pSegmentTags"/><xsl:with-param name="pPath" select="concat($pPath, '/', name())"/></xsl:apply-templates></xsl:copy></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="//*[matches(name(),'_gq[1-3]?_')]" mode="mPrepare"><xsl:call-template name="Convert_Node"><xsl:with-param name="pNodeName" select="substring-before(name(), '_gq')"/></xsl:call-template></xsl:template><xsl:template match="//*[matches(name(),'_pq[1-3]?_')]" mode="mPrepare"><xsl:call-template name="Convert_Node"><xsl:with-param name="pNodeName" select="substring-before(name(), '_pq')"/></xsl:call-template></xsl:template><xsl:template match="@*[matches(name(),'_pq[1-3]?_')]" mode="mPrepare"><xsl:call-template name="Convert_Attr"><xsl:with-param name="pAttrName" select="substring-before(name(), '_pq')"/></xsl:call-template></xsl:template><xsl:template name="Convert_Node"><xsl:param name="pNodeName"/><xsl:if test="$pNodeName != ''"><xsl:element name="{$pNodeName}"><xsl:apply-templates mode="mPrepare" select="@*|node()"/></xsl:element></xsl:if></xsl:template><xsl:template name="Convert_Attr"><xsl:param name="pAttrName"/><xsl:if test="$pAttrName != ''"><xsl:attribute name="{$pAttrName}"><xsl:value-of select="."/></xsl:attribute></xsl:if></xsl:template><xsl:template match="@*|node()" mode="mPrepare"><xsl:copy copy-namespaces="no"><xsl:apply-templates mode="mPrepare" select="@*|node()"/></xsl:copy></xsl:template></xsl:stylesheet>